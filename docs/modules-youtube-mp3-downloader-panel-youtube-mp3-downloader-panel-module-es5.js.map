{"version":3,"sources":["webpack:///src/app/modules/youtube-mp3-downloader-panel/youtube-mp3-downloader-panel.routing.module.ts","webpack:///src/app/modules/youtube-mp3-downloader-panel/components/loader/loader.component.html","webpack:///src/app/modules/youtube-mp3-downloader-panel/components/loader/loader.component.ts","webpack:///src/app/modules/youtube-mp3-downloader-panel/youtube-mp3-downloader-panel.module.ts"],"names":["routes","path","component","YoutubeMp3DownloaderPanelRoutingModule","forChild","LoaderComponent","shouldStartDownload","downloadUrl","event","data","download","link_now","URL","passedUrl","changingThisBreaksApplicationSecurity","youtubeVideoId","searchParams","get","format","buttonTitle","JSON","stringify","changes","currentValue","previousValue","fetch","encodeURIComponent","headers","Accept","then","response","json","showProgressAndSetDownloadUrl","id","i","progress","download_url","success","window","parent","postMessage","downloaded","setTimeout","e","YoutubeMp3DownloaderPanel","provide","useValue"],"mappings":"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","file":"modules-youtube-mp3-downloader-panel-youtube-mp3-downloader-panel-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { YoutubeMp3DownloaderPanelComponent } from \"./pages/youtube-mp3-downloader-panel/youtube-mp3-downloader-panel.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: YoutubeMp3DownloaderPanelComponent\n\t}\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class YoutubeMp3DownloaderPanelRoutingModule {}\n","<div>\n\t<button id=\"downloadButton\" style=\"color: red\">Download progress {{progress || 0}} / 100%</button>\n\t<ng-container *ngIf=\"downloadUrl\">\n\t\t<a\n\t\t\tid=\"{{youtubeVideoId}}\"\n\t\t\thref=\"{{downloadUrl}}\"\n\t\t\tid=\"download\"\n\t\t\tstyle=\"margin: 0 auto; display: flex; align-self: center\"\n\t\t>\n\t\t\tDownloaded\n\t\t</a></ng-container\n\t>\n</div>\n","import { Component, HostListener, Input, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\n\n@Component({\n\tselector: \"app-loader\",\n\ttemplateUrl: \"./loader.component.html\",\n\tstyleUrls: [\"./loader.component.scss\"]\n})\nexport class LoaderComponent implements OnInit, OnChanges {\n\t@Input() passedUrl: string;\n\t@Input() shouldStartDownload = false;\n\tbuttonTitle: string;\n\tlink_now: URL;\n\tformat: string;\n\tyoutubeVideoId: string;\n\tprogress: number;\n\tdownloadUrl = \"\";\n\t@HostListener(\"window:message\", [\"$event\"])\n\tonMessage(event) {\n\t\tif (event.data.shouldStartDownload) {\n\t\t\tthis.download();\n\t\t}\n\t}\n\t// constructor() {\n\t// \tif (window.addEventListener) {\n\t// \t\twindow.addEventListener(\"message\", this.download.bind(this), false);\n\t// \t} else {\n\t// \t\t(<any>window).attachEvent(\"onmessage\", this.download.bind(this));\n\t// \t}\n\t// }\n\n\tngOnInit(): void {\n\t\t//@ts-ignore\n\t\tthis.link_now = new URL(this.passedUrl.changingThisBreaksApplicationSecurity);\n\t\tthis.youtubeVideoId = this.link_now.searchParams.get(\"youtubeVideoId\");\n\t\tthis.format = this.link_now.searchParams.get(\"f\");\n\t\tthis.buttonTitle = JSON.stringify(this.link_now);\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif (changes.shouldStartDownload.currentValue && !changes.shouldStartDownload.previousValue) {\n\t\t\tthis.download();\n\t\t}\n\t}\n\n\tdownload() {\n\t\tfetch(\n\t\t\t\"https://loader.to/ajax/download.php?button=1&start=1&end=1&format=\" +\n\t\t\t\tthis.format +\n\t\t\t\t\"&url=\" +\n\t\t\t\t//@ts-ignore\n\t\t\t\tencodeURIComponent(this.link_now),\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: \"application/json\"\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\tthis.showProgressAndSetDownloadUrl(response.id);\n\t\t\t});\n\t}\n\n\tshowProgressAndSetDownloadUrl(i: number | string) {\n\t\tfetch(\"https://loader.to/ajax/progress.php?id=\" + i, {\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((response) => {\n\t\t\t\tthis.progress = response.progress / 10;\n\t\t\t\tif (response.download_url != null && response.success == 1) {\n\t\t\t\t\twindow.parent.postMessage(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tyoutubeVideoId: this.youtubeVideoId,\n\t\t\t\t\t\t\tdownloaded: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"*\"\n\t\t\t\t\t);\n\t\t\t\t\tthis.downloadUrl = response.download_url;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//@ts-ignore\n\t\t\t\tsetTimeout(this.showProgressAndSetDownloadUrl(i), 750);\n\t\t\t})\n\t\t\t.catch((\n\t\t\t\te //@ts-ignore\n\t\t\t) => setTimeout(this.showProgressAndSetDownloadUrl(i), 750));\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { YoutubeMp3DownloaderPanelRoutingModule } from \"./youtube-mp3-downloader-panel.routing.module\";\nimport {\n\tgoogleApiWindow,\n\tYoutubeMp3DownloaderPanelComponent\n} from \"./pages/youtube-mp3-downloader-panel/youtube-mp3-downloader-panel.component\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { LoaderComponent } from \"./components/loader/loader.component\";\n\n@NgModule({\n\tdeclarations: [YoutubeMp3DownloaderPanelComponent, LoaderComponent],\n\timports: [CommonModule, SharedModule, YoutubeMp3DownloaderPanelRoutingModule],\n\tproviders: [{ provide: googleApiWindow, useValue: window }]\n})\nexport class YoutubeMp3DownloaderPanel {}\n"]}